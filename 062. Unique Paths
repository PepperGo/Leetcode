public class Solution {
    public int uniquePaths(int m, int n) {
        int[][] result = new int[m][n];
        for(int i = 0; i < m; i++)
             result[i][0] = 1;
        for(int j = 0; j < n; j++)
             result[0][j] = 1;
        for(int i = 1; i < m; i++)
            for(int j = 1; j < n; j++){
                result[i][j] = result[i-1][j]+result[i][j-1];
            }
        return result[m-1][n-1];
        
    }
}

class Solution {
    public int uniquePaths(int m, int n) {
        int[][] ways = new int[m][n];
        for(int i = 0; i < m; i++){
            for(int j = 0; j < n; j++){
                if(i == 0 || j == 0) 
                    ways[i][j] = 1;
                else
                    ways[i][j] = ways[i - 1][j] + ways[i][j - 1];
            }
        }
        return ways[m - 1][n - 1];
    }
}

class Solution {
    public int uniquePaths(int m, int n) {
        int[] dis = new int[m];
        for(int i = 0; i < n; i++){
            for(int j = 0; j < m; j++){
                if(j == 0) 
                    dis[j] = 1;
                else
                    dis[j] = dis[j - 1] + dis[j];
            }
        }
        return dis[m - 1];
    }
}
