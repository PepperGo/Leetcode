
public class Solution {
    public boolean exist(char[][] board, String word) {
        for(int i = 0; i < board.length; i ++){
           for(int j = 0; j < board[0].length; j ++){
              if(isExist(i , j, board, word, 0)) return true;
           }
        }
        return false;
    }

    Boolean isExist(int i, int j, char[][] board, String word, int index){
        if(index == word.length()) return true;
        if(i < 0 || j < 0 || i == board.length || j == board[0].length) return false;
        if(board[i][j] != word.charAt(index)) return false;
        board[i][j] ^= 256;

        if(isExist(i - 1, j, board, word, index+1)||isExist(i + 1, j, board, word, index+1) ||
        isExist(i, j - 1, board, word, index+1)|| isExist(i, j + 1, board, word, index+1) ) return true;

        board[i][j] ^= 256;

        return false;
    }

}


class Solution {
    boolean[][] visited;
    public boolean exist(char[][] board, String word) {
        visited  = new boolean[board.length][board[0].length];
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                if(board[i][j] == word.charAt(0) && search(board, word, i, j, 0)){
                    return true;
                }
            }
        }
        return false;
    }
    
    public boolean search(char[][] board, String word, int i, int j, int index){
        if(i >= board.length || i < 0 || j >= board[0].length || j < 0 || board[i][j] != word.charAt(index) || visited[i][j])
            return false;
        visited[i][j] = true;
        
        if(index == word.length() - 1) return true;
        if(search(board, word, i + 1, j, index + 1) || search(board, word, i - 1, j, index + 1) || search(board, word, i, j - 1, index + 1) || search(board, word, i, j + 1, index + 1))
            return true;
        visited[i][j] = false;
        return false;
    }
}

class Solution {
    public boolean[][] visited;
    public boolean exist(char[][] board, String word) {
        if(board.length == 0 && word.length() != 0) return false;
        visited = new boolean[board.length][board[0].length];
        boolean isExist = false;
        for(int i = 0; i < board.length; i++){
            for(int j = 0; j < board[0].length; j++){
                    if(isExist(board, word, 0, i, j)){
                        return true;
                    }
            }
        }
        return isExist;
    }
    
    public boolean isExist(char[][] board, String word, int index, int i, int j){
        if(index == word.length()) return true;
        if(i < 0 || j < 0 || i >= board.length || j >= board[0].length || visited[i][j] || board[i][j] != word.charAt(index)) return false;
        visited[i][j] = true;
        if(isExist(board, word, index + 1, i + 1, j) || 
           isExist(board, word, index + 1, i, j + 1) ||
           isExist(board, word, index + 1, i - 1, j) || 
           isExist(board, word, index + 1, i, j - 1)){
            return true;
        }
        visited[i][j] = false;
        return false;
    }
}
