public class Solution {
    public boolean canJump(int[] nums) {
	    int reach = 0;
	    int i = 0;
		for( ; i < nums.length && i <= reach; i++)
		    reach = Math.max(nums[i]+i, reach);
			
	    return i == nums.length;
        
    }
}

class Solution {
    public boolean canJump(int[] nums) {
        int maxDis = 0;
        for(int i = 0; i <= maxDis && i < nums.length; i++){
            maxDis = Math.max(maxDis, i + nums[i]);
        }
        return maxDis >= nums.length - 1;
    }
}

class Solution {
    public boolean canJump(int[] nums) {
        int max = 0, curEnd = 0;
        for(int i = 0; i < nums.length; i++){
            max = Math.max(max, i + nums[i]);
            if(i == curEnd){
                curEnd = max;
                if(max >= nums.length - 1)
                    return true;
            }
        }
        return false;
    }
}
