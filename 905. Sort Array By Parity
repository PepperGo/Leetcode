class Solution {
    public int[] sortArrayByParity(int[] A) {
        int i = 0, j = A.length-1;
        while(i < j){
            if(A[i] % 2 > A[j] % 2){
                int temp = A[i];
                A[i] = A[j];
                A[j] = temp;
            }
            if(A[i] % 2 == 0) i++;
            if(A[j] % 2 == 1) j--;
        }
        return A;
    }
}

class Solution {
    public int[] sortArrayByParity(int[] A) {
        int[] result = new int[A.length];
        int oddIndex = A.length-1, evenIndex = 0;
        for(int i = 0; i < A.length; i++){
            if(A[i] % 2 == 0){
                result[evenIndex++] = A[i];
            }else{
                result[oddIndex--] = A[i];
            }
        }
        return result;
    }
}


class Solution {
    public int[] sortArrayByParity(int[] A) {
        int odd = A.length - 1;
        for(int i = 0; i < odd; i++){
            while(A[i] % 2 == 1 && i < odd){
                int temp = A[i];
                A[i] = A[odd];
                A[odd] = temp;
                odd--;
            }
        }
        return A;
    }
}
