class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) return "";
        String prefix = strs[0];
        for(int i = 1; i < strs.length; i++){
            while(strs[i].indexOf(prefix) != 0){
                prefix = prefix.substring(0, prefix.length()-1);
                if(prefix.isEmpty()) return "";
            } 
        }
        return prefix;
    }
}

class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) return "";
        String prefix = strs[0];
        for(String str : strs){
            prefix = longestPrefix(prefix, str);
        }
        return prefix;
    }
    
    public String longestPrefix(String str1, String str2){
        String prefix = "";
        for(int i = 0; i < Math.min(str1.length(), str2.length()); i++){
            if(str1.charAt(i) == str2.charAt(i)){
                prefix += str1.charAt(i);
            }else
                break;
        }
        return prefix;
    }
}


public class Solution {
    public String longestCommonPrefix(String[] strs) {
       if(strs.length == 0) return "";
       String result = strs[0];
       
       for(int i = 1; i < strs.length; i++){
           while(strs[i].indexOf(result) != 0){
               result = result.substring(0, result.length() - 1);
               if(result.equals("")) return "";
           }
       }
       
       return result;
    }
}


class Solution {
    public String longestCommonPrefix(String[] strs) {
        if(strs.length == 0) return "";
        String cur = strs[0];
        int i = 1;
        while(i < strs.length){
            while(strs[i].indexOf(cur) != 0){
                cur = cur.substring(0, cur.length() - 1);
            }
            i++;
        }
        return cur;
    }
}
