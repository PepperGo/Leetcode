public int[] plusOne(int[] digits) {
        
    int n = digits.length;
    for(int i=n-1; i>=0; i--) {
        if(digits[i] < 9) {
            digits[i]++;
            return digits;
        }
        
        digits[i] = 0;
    }
    
    int[] newNumber = new int [n+1];
    newNumber[0] = 1;
    
    return newNumber;
}

public class Solution {
    public int[] plusOne(int[] digits) {
        
        
        for(int i = digits.length - 1; i >= 0; i--){
            if(digits[i] != 9){
                digits[i]++;
                break;
            } 
            else{
                digits[i] = 0;
            }
        }
        
        if(digits[0] == 0){
            int[] result = new int[digits.length + 1];
            result[0] = 1;
            return result;
        }
        
         return digits;
    }
}


class Solution {
    public int[] plusOne(int[] digits) {
        if(isNinePlus(digits)){
            int[] result = new int[digits.length + 1];
            result[0] = 1;
            return result;
        }
        int incre = 1;
        for(int i = digits.length - 1; i >= 0; i--){
            digits[i] = (digits[i] + incre) % 10;
            if(digits[i] == 0) incre = 1;
            else break;
        }
        return digits;
    }
    
    public boolean isNinePlus(int[] digits){
        for(int digit : digits){
            if(digit != 9)
                return false;
        }
        return true;
    }
}

