class Solution {
    private List<String> result;
    public List<String> removeInvalidParentheses(String s) {
        result = new ArrayList<>();
        dfs(s, 0, 0, new char[]{'(', ')'});
        return result;
    }
    
    public void dfs(String s, int i_start, int j_start, char[] pair){
        int count = 0;
        for(int i = i_start; i < s.length(); i++){
            if(s.charAt(i) == pair[0]) count++;
            if(s.charAt(i) == pair[1]) count--;
            if(count >= 0) continue;
            for(int j = j_start; j <= i; j++){
                if(s.charAt(j) == pair[1] && (j == j_start || s.charAt(j-1) != pair[1])){
                    dfs(s.substring(0, j) + s.substring(j+1), i, j, pair);
                }
            }
            return;
        }
        String reverseString = new StringBuilder(s).reverse().toString();
        if(pair[0] == '(')
            dfs(reverseString, 0, 0, new char[]{')', '('});
        else
            result.add(reverseString);
    }
}
