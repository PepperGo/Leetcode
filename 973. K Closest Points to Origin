class Solution {
    public int[][] kClosest(int[][] points, int K) {
        //max - heap
        PriorityQueue<int[]> pq = new PriorityQueue<>(new Comparator<int[]>(){
            public int compare(int[] p1, int[] p2){
                return (p2[0] * p2[0]) + (p2[1] * p2[1]) - (p1[0] * p1[0]) - (p1[1] * p1[1]);
            }
        });
        
        for(int[] point : points){
            pq.offer(point);
            if(pq.size() > K){
                pq.poll();
            }
        }
        int[][] result = new int[pq.size()][];
        for(int i = 0; i < result.length; i++){
            result[i] = pq.poll();
        }
        return result;
    }
}
