/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public List<String> binaryTreePaths(TreeNode root) {
        List<String> result = new ArrayList<>();
        if(root == null) return result;
        traverse(result, "", root);
        return result;
    }
    
    public void traverse(List<String> result, String temp, TreeNode node){
        if(node.left == null && node.right == null){
            temp += "->" + node.val;
            temp = temp.substring(2);//delete first ->
            result.add(temp);
            return;
        }else{
            temp += "->" + node.val;
            if(node.left != null)
                traverse(result, temp, node.left);
            if(node.right != null)
                traverse(result, temp, node.right);
        }
    }
}

