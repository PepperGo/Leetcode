class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double sum = 0;
        for(int i = 0; i < k; i++){
            sum += nums[i];
        }
        double result = sum;
        for(int i = k; i < nums.length; i++){
            sum += nums[i] - nums[i - k];
            result = Math.max(result, sum);
        }
        return result/k;
    }
}
Cumulative Sum, Sliding Window

//Time Limit Exceeded
class Solution {
    public double findMaxAverage(int[] nums, int k) {
        double maxAve = -Double.MAX_VALUE;
        for(int i = 0; i <= nums.length - k; i++){
            maxAve = Math.max(maxAve, findMaxAverageHelper(nums, i, i + k - 1));
        }
        return maxAve;
    }
    
    public double findMaxAverageHelper(int[] nums, int start, int end){
        double sum = 0;
        for(int i = start; i <= end; i++){
            sum += nums[i];
        }
        return sum/(end - start + 1);
    }
}
