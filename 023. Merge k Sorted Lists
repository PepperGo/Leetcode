/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeKLists(ListNode[] lists) {
        if(lists == null || lists.length == 0) return null;
        PriorityQueue<ListNode> pq = new PriorityQueue<ListNode>(new Comparator<ListNode>(){
            public int compare(ListNode a, ListNode b){
                return a.val - b.val;
            }
        });
        ListNode dummy = new ListNode(0);
        ListNode cur = dummy;
        for(ListNode node : lists){
            if(node != null)
                pq.offer(node);
        }
        
        while(!pq.isEmpty()){
            ListNode least = pq.poll();
            cur.next = least;
            cur = cur.next;
            if(least.next != null){
                least = least.next;
                pq.offer(least);
            }
        }
        return dummy.next;
        
    }
}
