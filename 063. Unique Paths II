public class Solution {
    public int uniquePathsWithObstacles(int[][] obstacleGrid) {
        int m = obstacleGrid.length;
		int n = obstacleGrid[0].length;
	    if(obstacleGrid[m - 1][n - 1] == 1) return 0; 
		
		int[][] result = new int[m][n];
		// row 0
		int defaultNum = 1;
		for(int j = 0; j < n ; j++){
		    if(obstacleGrid[0][j] == 0)
     			result[0][j] = defaultNum;
			else{
			    defaultNum = 0;
			    result[0][j] = defaultNum;	
			}
	            
		}
		// column 0
	    defaultNum = 1;
		for(int i = 0; i < m; i++){
			if(obstacleGrid[i][0] == 0)
			    result[i][0] = defaultNum;
		    else{
			    defaultNum = 0;
			    result[i][0] = defaultNum;
			}		
		}
		
		for(int i = 1; i < m; i++){
		    for(int j = 1; j < n; j++){
			     if(obstacleGrid[i - 1][j] == 1 && obstacleGrid[i][j - 1] == 1)
				       result[i][j] = 0;
				 else if(obstacleGrid[i - 1][j] == 1)
				       result[i][j] = result[i][j - 1];
			     else if(obstacleGrid[i][j - 1] == 1)
				       result[i][j] = result[i - 1][j];
			     else 
				       result[i][j] = result[i - 1][j] + result[i][j - 1];
			}
		
		}

        return result[m - 1][n - 1];		
		
		
    }
}
