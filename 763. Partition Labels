class Solution {
    public List<Integer> partitionLabels(String S) {
        int[] last = new int[26];
        for(int i = 0; i < S.length(); i++){
            last[S.charAt(i)-'a'] = i;
        }
        List<Integer> partitions = new ArrayList<>();
        int end = 0, start = 0;
        for(int i = 0; i < S.length(); i++){
            end = Math.max(end, last[S.charAt(i)-'a']);
            if(end == i){
                partitions.add(end-start+1);
                start = end+1;
            }
        }
        return partitions;
    }
}


class Solution {
    public List<Integer> partitionLabels(String S) {
        List<Integer> result = new ArrayList<>();
        if(S == null || S.length() == 0) return result;
        int[] lastOccur = new int[26];
        for(int i = 0; i < S.length(); i++){
            lastOccur[S.charAt(i) - 'a'] = i;
        }
        int last = 0;
        int start = 0;
        for(int i = 0; i < S.length(); i++){
            last = Math.max(last, lastOccur[S.charAt(i) - 'a']);
            if(last == i){
                result.add(last - start + 1);
                start = last + 1;
            }
        }
        return result;
    }
}
