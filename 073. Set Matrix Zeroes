class Solution {
    private int R, L;
    public void setZeroes(int[][] matrix) {
        if(matrix == null || matrix.length == 0) return;
        R = matrix.length; L = matrix[0].length;
        boolean isCol0 = false;
        for(int i = 0; i < R; i++){
            if(matrix[i][0] == 0) isCol0 = true;
            for(int j = 1; j < L; j++){
                if(matrix[i][j] == 0){
                    matrix[i][0] = matrix[0][j] = 0;
                }
            }
        }
        
        for(int i = R-1; i >= 0; i--){
            for(int j = L-1; j>= 1; j--){
                if(matrix[i][0] == 0 || matrix[0][j] == 0)
                    matrix[i][j] = 0;
            }
            if(isCol0) matrix[i][0] = 0;
        }
    }
}


class Solution {
    private int R, L;
    private boolean[] rowVisited;
    private boolean[] colVisited;
    public void setZeroes(int[][] matrix) {
        if(matrix == null || matrix.length == 0) return;
        R = matrix.length; L = matrix[0].length;
        rowVisited = new boolean[R];
        colVisited = new boolean[L];
        
        for(int i = 0; i < R; i++){
            for(int j = 0; j < L; j++){
                if(matrix[i][j] == 0){
                    rowVisited[i] = true;
                    colVisited[j] = true;
                }
            }
        }
            
        for(int i = 0; i < R; i++){
            for(int j = 0; j < L; j++){
                if(rowVisited[i] || colVisited[j]){
                    matrix[i][j] = 0;
                }
            }
        }
    }
}
