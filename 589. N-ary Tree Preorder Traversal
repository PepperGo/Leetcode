/*
// Definition for a Node.
class Node {
    public int val;
    public List<Node> children;

    public Node() {}

    public Node(int _val,List<Node> _children) {
        val = _val;
        children = _children;
    }
};
*/
class Solution {
    public List<Integer> preorder(Node root) {
        List<Integer> result = new ArrayList<Integer>();
        Deque<Node> pending = new LinkedList<Node>();
        pending.add(root);
        while(!pending.isEmpty()){
            Node node= pending.pollFirst();
            if(node == null) continue;
            result.add(node.val);
            for(int i = node.children.size()- 1; i >= 0; i--){
                pending.offerFirst(node.children.get(i));
            }
        }
        return result;
    }
}
