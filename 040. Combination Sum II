public class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> result = new ArrayList<List<Integer>>();
        List<Integer> set = new ArrayList<Integer>();
        Arrays.sort(candidates);
        getSet(result, candidates, target, set, 0);
        return result;
    }
    
    void getSet(List<List<Integer>> result, int[] candidates, int target, List<Integer> set, int start){

        if(target == 0){
        	result.add(new ArrayList<Integer> (set));
        }
        
        if(target>0){
            for(int i = start; i < candidates.length; i++){
                if (i > start && candidates[i] == candidates[i-1]) continue;
                set.add(candidates[i]);
                getSet(result, candidates, target - candidates[i], set, i+1);
                set.remove(set.size()-1);
            }

        }
        
          
    }
    
}
