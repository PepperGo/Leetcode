public class Solution {
    public int majorityElement(int[] nums) {
        int count = 1;
        int num = nums[0];
        
        for(int i = 1; i < nums.length; i++){
            if(num == nums[i]){
                count++;
            }
            else if(count == 0){
                num = nums[i];
                count++;
            }
            else{
                count--;
            }
        }
        return num;   
    }
}



class Solution {
    public int majorityElement(int[] nums) {
        HashMap<Integer, Integer> hashMap = new HashMap<>();
        for(int num : nums){
            int count = hashMap.getOrDefault(num, 0) + 1;
            hashMap.put(num, count);
        }
        int majority = 0;
        int count = 0;
        for(Map.Entry<Integer, Integer> set : hashMap.entrySet()){
            if(count < set.getValue()){
                majority = set.getKey();
                count = set.getValue();
            }
        }
        return majority;
    }
}

class Solution {
    public int majorityElement(int[] nums) {
        int count = 0;
        Integer candidate = null;
        for(int num : nums){
            if(count == 0){
                candidate = num;
            }
            count += candidate == num ? 1 : -1;
        }
        return candidate;
    }
}
