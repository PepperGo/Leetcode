/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    public TreeNode constructMaximumBinaryTree(int[] nums) {
        return constructTree(nums, 0, nums.length - 1);
    }
    
    public TreeNode constructTree(int[] nums, int i, int j){
        if(i > j) return null;
        int index = findMaximum(nums, i, j);
        TreeNode node = new TreeNode(nums[index]);
        node.left = constructTree(nums, i, index - 1);
        node.right = constructTree(nums, index + 1, j);
        return node;
    }
    
    public int findMaximum(int[] nums, int i, int j){
        int index = i, max = Integer.MIN_VALUE;
        for(int cur = i; cur <= j; cur++){
            if(nums[cur] > max){
                index = cur;
                max = nums[cur];
            }
        }
        return index;
    }
}
