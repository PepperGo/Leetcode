class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap<Integer, Integer> hashMap = new HashMap<>();
        for(int i = 0; i < nums.length; i++){
            if(hashMap.containsKey(nums[i])){
                if(i - hashMap.get(nums[i]) <= k) return true;
            }
            hashMap.put(nums[i], i);
        }
        return false;
    }
}

public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        for(int i = 0; i < nums.length; i++){
            for(int j = i + 1; j < nums.length; j++ ){
                 if(nums[i] == nums[j]){
                     if(j - i <= k) return true;
                     else break;
                 }
            }
        }
        return false;
    }
}

//Submission Result: Time Limit Exceeded

public class Solution {
    public boolean containsNearbyDuplicate(int[] nums, int k) {
        HashMap<Integer, Integer> map = new HashMap<Integer, Integer>();
        for(int i = 0; i < nums.length; i++){
            if(map.containsKey(nums[i])){
                int first = map.get(nums[i]);
                if(i - first <= k) return true;
            }
            map.put(nums[i],i);
        }
        return false;
    }
}
