class Solution {
    public int integerBreak(int n) {
        if(n == 2) return 1;
        if(n == 3) return 2;
        if(n == 4) return 4;
        int product = 1;
        while(n > 4){
            product *= 3;
            n -= 3;
        }
        return product * n;
    }
}


class Solution {
    public int integerBreak(int n) {
        int[] dp = new int[n + 1]; //dp[i]: the maximum product of integer i
        dp[0] = 0;
        dp[1] = 0;
        for(int i = 2; i <= n; i++){
            for(int j = 0; j < i; j++){
                dp[i] = Math.max(dp[i], Math.max(j, dp[j]) * Math.max(i - j, dp[i - j]));
            }
        }
        return dp[n];
    }
}
