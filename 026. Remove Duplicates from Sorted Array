class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length == 0) return 0;
        int insertPos = 0;
        nums[insertPos++] = nums[0];
        for(int i = 1; i < nums.length; i++){
            if(nums[i] != nums[i-1])
                nums[insertPos++] = nums[i];
        }
        return insertPos;
    }
}

public class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length == 0) return 0;

        int num = 0;
        for(int i = 1; i < nums.length; i++){
            if(nums[num] != nums[i]){
                num++;  
                nums[num] = nums[i];
            }
        }
        return (num+1);
    }
}

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums == null || nums.length == 0)
            return 0;
        int count = 1;
        int prior = nums[0];
        for(int num : nums){
            if(prior != num) 
                nums[count++] = num;
            prior = num;
        }
        return count;
    }
}

class Solution {
    public int removeDuplicates(int[] nums) {
        if(nums.length < 2) return nums.length;
        int unique = 1;
        for(int i = 0; i < nums.length - 1; i++){
            if(nums[i] != nums[i + 1]){
                nums[unique++] = nums[i + 1];
            }
        }
        return unique;
    }
}
