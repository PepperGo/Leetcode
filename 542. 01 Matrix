class Solution {
    public int[][] updateMatrix(int[][] matrix) {
        Queue<int[]> points = new LinkedList<>();
        for(int i = 0; i < matrix.length; i++){
            for(int j = 0; j < matrix[0].length; j++){
                if(matrix[i][j] == 0){
                    points.offer(new int[]{i, j});
                }else{
                    matrix[i][j] = Integer.MAX_VALUE;
                }
            }
        }
        int[][] directions = new int[][] {{0, 1}, {0, - 1}, {1, 0}, {-1, 0}};
        while(!points.isEmpty()){
            int[] point = points.poll();
            for(int[] dir : directions){
                int newX = point[0] + dir[0];
                int newY = point[1] + dir[1];
                if(newX >= 0 && newX < matrix.length && newY >= 0 && newY < matrix[0].length 
                   && matrix[newX][newY] > matrix[point[0]][point[1]] + 1){
                    matrix[newX][newY] = matrix[point[0]][point[1]] + 1;
                    points.offer(new int[]{newX, newY});
                }
            }
        }
        return matrix;
    }
}
