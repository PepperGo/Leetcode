class Solution {
    public int peakIndexInMountainArray(int[] A) {
        int low = 0, high = A.length;
        while(low < high){
            int mid = low + (high-low)/2;
            if(A[mid] < A[mid+1]){
                low = mid+1;
            }else{
                high = mid;
            }
        }
        return low;
    }
}

class Solution {
    public int peakIndexInMountainArray(int[] A) {
        int height = Integer.MIN_VALUE, index = 0;
        for(int i = 0; i < A.length; i++){
            if(A[i] > height){
                height = A[i];
                index = i;
            }
        }
        return index;
    }
}




class Solution {
    public int peakIndexInMountainArray(int[] A) {
        if(A.length == 0) return 0;
        int max = A[0], index = 0;
        for(int i = 0; i < A.length; i++){
            if(A[i] > max){
                max = A[i];
                index =i;
            }
        }
        return index;
    }
}


class Solution {
    public int peakIndexInMountainArray(int[] A) {
        int low = 0, high = A.length; //search in the range of [low, high)
        while(low < high){
            int mid = low + (high - low)/2;
            if(A[mid] < A[mid + 1]){
                low = mid + 1;
            }else{
                high = mid;
            }
        }
        return low;
    }
}
