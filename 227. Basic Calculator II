public class Solution {
    public int calculate(String s) {
        int len;
        if(s == null || (len = s.length()) == 0) return 0;
        Stack<Integer> numpool = new Stack<Integer>();
        int num = 0;
        char sign = '+';
        for(int i = 0; i < len; i ++){
        	if(Character.isDigit(s.charAt(i))){
        		num = num * 10 + s.charAt(i) - '0';
        	}
        	if((!Character.isDigit(s.charAt(i)) && s.charAt(i) != ' ') || i == len - 1){
        		if(sign == '+') numpool.push(num);
        		if(sign == '-') numpool.push(-num);
        		if(sign == '*') numpool.push(numpool.pop() * num);
        		if(sign == '/') numpool.push(numpool.pop() / num);
        		sign = s.charAt(i);
                num = 0; //each new number, wo need initialize num
        	}
        }
        int res = 0;
        for(int i : numpool)
        	res = res + i;

        return res;

    }
}
