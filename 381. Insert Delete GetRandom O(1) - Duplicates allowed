class RandomizedCollection {

    List<Integer> list;
    Map<Integer, Set<Integer>> map;
    
    /** Initialize your data structure here. */
    public RandomizedCollection() {
        list = new ArrayList<>();
        map = new HashMap<>();
    }
    
    /** Inserts a value to the collection. Returns true if the collection did not already contain the specified element. */
    public boolean insert(int val) {
        boolean isContains = true;
        if(!map.containsKey(val)){
            map.put(val, new HashSet<Integer>());
            isContains = false;
        }
        map.get(val).add(list.size());
        list.add(val);
        return !isContains;
    }
    
    /** Removes a value from the collection. Returns true if the collection contained the specified element. */
    public boolean remove(int val) {
        if(map.getOrDefault(val, new HashSet<Integer>()).size() == 0){
            return false;
        }
        int pos = map.get(val).iterator().next();
        map.get(val).remove(pos);
        if(pos != list.size()-1){
            int changeVal = list.get(list.size()-1);
            list.set(pos, changeVal);
            map.get(changeVal).remove(list.size()-1);
            map.get(changeVal).add(pos);
        }
        list.remove(list.size()-1);
        return true;
    }
    
    /** Get a random element from the collection. */
    public int getRandom() {
        int index = new Random().nextInt(list.size());
        return list.get(index);
    }
}

/**
 * Your RandomizedCollection object will be instantiated and called as such:
 * RandomizedCollection obj = new RandomizedCollection();
 * boolean param_1 = obj.insert(val);
 * boolean param_2 = obj.remove(val);
 * int param_3 = obj.getRandom();
 */
