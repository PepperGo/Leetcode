public class Solution {
    public int climbStairs(int n) {
    /* time exceed
        if(n == 0) return 0;
        if(n == 2) 
            return 2;
        else if(n == 1)
            return 1;
        else
            return climbStairs(n - 1) + climbStairs(n - 2);
            */
        if(n == 0) return 0;
        if(n == 2) return 2;
        if(n == 1) return 1;
        int[] result = new int[n+1];
        result[0] = 0;
        result[1] = 1;
        result[2] = 2;
        
        for(int i = 3; i < n + 1; i++){
            result[i] = result[i-1] + result[i-2];
        }
        
        return result[n];
    }
}


class Solution {
    public int climbStairs(int n) {
        int[] steps = new int[n + 1];
        steps[0] = 1;
        steps[1] = 1;
        for(int i = 2; i < n + 1; i++){
            steps[i] = steps[i - 2] + steps[i - 1];
        }
        return steps[n];
    }
}
