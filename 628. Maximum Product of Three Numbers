
Don't do sorting. Instead, we can only find the required 2 smallest values(min1min1 and min2min2) and the three largest values(min1, min2, max3, max1,max2,max3) in the numsnums array, by iterating over the numsnums array only once

class Solution {
    public int maximumProduct(int[] nums) {
        int min1 = Integer.MAX_VALUE, min2 = Integer.MAX_VALUE;
        int max1 = Integer.MIN_VALUE, max2 = Integer.MIN_VALUE, max3 = Integer.MIN_VALUE;
        for(int num : nums){
            if(num < min1){
                min2 = min1;
                min1 = num;
            }else if(num <= min2){
                min2 = num;
            }
            if(num > max1){
                max3 = max2;
                max2 = max1;
                max1 = num;
            }else if(num >= max2){
                max3 = max2;
                max2 = num;
            }else if(num >= max3){
                max3 = num;
            }
        }
        return Math.max(min1*min2*max1, max1*max2*max3);
    }
}


class Solution {
    public int maximumProduct(int[] nums) {
        Arrays.sort(nums);
        int n = nums.length;
        return Math.max(nums[0]*nums[1]*nums[n-1], nums[n-1]*nums[n-2]*nums[n-3]);
    }
}

class Solution {
    public int maximumProduct(int[] nums) {
        if(nums.length < 3) return 0;
        Arrays.sort(nums);
        return Math.max(nums[0]*nums[1]*nums[nums.length-1], nums[nums.length-3]*nums[nums.length-2]*nums[nums.length-1]);
    }
}


class Solution {
    public int maximumProduct(int[] nums) {
        int max1 = -1000, max2 = -1000, max3 = -1000, min1 = 1000, min2 = 1000;
        for(int num : nums){
            if(num > max1){
                max3 = max2;
                max2 = max1;
                max1 = num;
            }else if(num > max2){
                max3 = max2;
                max2 = num;
            }else if(num > max3){
                max3 = num;
            }
            if(num < min1){
                min2 = min1;
                min1 = num;
            }else if(num < min2){
                min2 = num;
            }
        }
        return Math.max(max1 * max2 * max3, max1 * min1 * min2);
    }
}
