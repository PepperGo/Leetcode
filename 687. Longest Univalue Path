/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode(int x) { val = x; }
 * }
 */
class Solution {
    private int max = 0;
    public int longestUnivaluePath(TreeNode root) {
        if(root == null) return 0;
        traverse(root);
        return max;
    }
    
    public int traverse(TreeNode node){
        if(node == null) return 0;
        int left = traverse(node.left);
        int right = traverse(node.right);
        //we need to define two new variables, since it's possible node.left.val != node.val or node.right.val != node.val
        int leftPathSum = 0, rightPathSum = 0;
        if(node.left != null && node.left.val == node.val){
            leftPathSum += left + 1;
        }
        if(node.right != null && node.right.val == node.val){
            rightPathSum += right + 1;
        }
        max = Math.max(max, leftPathSum + rightPathSum);
        return Math.max(leftPathSum, rightPathSum);      
    }
}
