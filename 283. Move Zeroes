class Solution {
    public void moveZeroes(int[] nums) {
        int idx_0 = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0){
                swap(nums, i, idx_0);
                idx_0++;
            }
        }
    }
    
    public void swap(int[] nums, int i, int j){
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}

class Solution {
    public void moveZeroes(int[] nums) {
        int insertPos = 0;
        for(int num : nums){
            if(num != 0)
                nums[insertPos++] = num;
        }
        while(insertPos < nums.length){
            nums[insertPos++] = 0;
        }
    }
}

public class Solution {
    public void moveZeroes(int[] nums) {
        int count = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0)
               nums[count++] = nums[i];
            }
        
        for(int i = count; i < nums.length; i++)
               nums[i] = 0;
    }
}


class Solution {
    public void moveZeroes(int[] nums) {
        int zeroP = 0;
        for(int i = 0; i < nums.length; i++){
            if(nums[i] != 0)
                nums[zeroP++] = nums[i];
        }
        for(int i = zeroP; i < nums.length; i++)
            nums[i] = 0;
    }
}

class Solution {
    public void moveZeroes(int[] nums) {
        for(int i = 0, zero = 0; i < nums.length; i++){
            if(nums[i] != 0){
                int temp = nums[zero];
                nums[zero++] = nums[i];
                nums[i] = temp;
            }
        }
    }
}


class Solution {
    public void moveZeroes(int[] nums) {
        for(int i = 0, zero = 0; i < nums.length; i++){
            if(nums[i] != 0 ){
                if(i != zero){
                    int temp = nums[zero];
                    nums[zero] = nums[i];
                    nums[i] = temp;
                }
                zero++;
            }
        }
    }
}
