class AutocompleteSystem {
    
    private String command = "";
    private HashMap<String, Sentence> map;
    public AutocompleteSystem(String[] sentences, int[] times) {
        map = new HashMap<>();
        int L = sentences.length;
        for(int i = 0; i < L; i++){
            map.put(sentences[i], new Sentence(sentences[i], times[i]));
        }
    }
    
    public List<String> input(char c) {
        List<String> result = new ArrayList<>();
        PriorityQueue<Sentence> pq; pq = new PriorityQueue<>(new Comparator<Sentence>(){
            public int compare(Sentence s1, Sentence s2){
                if(s1.times != s2.times){
                    return s2.times - s1.times;
                }else{
                    return s1.str.compareTo(s2.str);
                }
            }
        });
        if(c == '#'){
            if(map.containsKey(command)){
                map.get(command).times++;
            }else{
                map.put(command, new Sentence(command, 1));
            }
            command = "";
            return result;
        }else{
            command += c;
        }
        for(Map.Entry<String, Sentence> entry : map.entrySet()){
            if(entry.getKey().indexOf(command) == 0)
                pq.offer(entry.getValue());
        }
        while(result.size() < 3 && !pq.isEmpty()){
            result.add(pq.poll().str);
        }
        return result;
    }
}

class Sentence{
    String str;
    int times;
    
    Sentence(String str, int times){
        this.str = str;
        this.times = times;
    }
}

/**
 * Your AutocompleteSystem object will be instantiated and called as such:
 * AutocompleteSystem obj = new AutocompleteSystem(sentences, times);
 * List<String> param_1 = obj.input(c);
 */
