public class Solution {
    
    public void solve(char[][] board) {
        if(board.length == 0) return;
        int rowlength = board[0].length;
        int collength = board.length;
        for(int i = 0; i < collength; i ++){
            check(board, i, 0, rowlength, collength);
            if(rowlength > 1)
               check(board, i, rowlength - 1, rowlength, collength);
        }
        
        for(int j = 1; j < rowlength - 1; j ++){
            check(board, 0, j, rowlength, collength);
            if(collength > 1)
               check(board, collength - 1, j, rowlength, collength);
        }
        
        for(int i = 0; i < collength; i ++ )
            for(int j = 0; j < rowlength; j ++)
               if(board[i][j] == 'O') 
                  board[i][j] = 'X';
                  
        for(int i = 0; i < collength; i ++)
            for(int j = 0; j < rowlength; j ++)
               if(board[i][j] == '1') 
                  board[i][j] = 'O';
        
    }
    
    public void check(char[][] board, int i, int j, int row, int col){
        if(board[i][j] == 'O'){
             board[i][j] = '1';
             if(i > 1) check(board, i - 1, j, row, col);
             if(j > 1) check(board, i, j - 1, row, col);
             if(i < col - 1) check(board, i + 1, j, row, col);
             if(j < row - 1) check(board, i, j + 1, row, col);
        }
    }
}
