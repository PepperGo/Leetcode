class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<String>();
        if(nums.length == 1){
            result.add(nums[0] + "");
            return result;
        }
        for(int i = 0; i < nums.length; i++){
            int a = nums[i];
            while((i < nums.length - 1) && (nums[i + 1] - nums[i] == 1)){
                i ++;
            }
            if(a != nums[i]) 
                result.add(a + "->" + nums[i]);
            else
                result.add(a + "");
        }
        return result;
 
    }
}


class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<>();
        for(int i = 0; i < nums.length; i++){
            int start = nums[i];
            while(i < nums.length - 1 && nums[i + 1] == nums[i] + 1){
               i++;
            }
            System.out.println(i);
            int end = nums[i];
            StringBuilder str = new StringBuilder();
            if(start != end){
                str.append(start).append("->").append(end);
            }else
                str.append(start);
            result.add(str.toString());
        }
        return result;
    }
}


class Solution {
    public List<String> summaryRanges(int[] nums) {
        List<String> result = new ArrayList<>();
        if(nums.length == 0) return result;
        for(int start = 0, cur = 0; cur < nums.length; cur++){
            while(cur < nums.length - 1 && nums[cur] + 1 == nums[cur + 1]){
                cur++;
            }
            if(start == cur){
                result.add(nums[cur] + "");
            }else{
                result.add(nums[start] + "->" + nums[cur]);
            }
            start = cur + 1;
        }
        return result;
    }
}
